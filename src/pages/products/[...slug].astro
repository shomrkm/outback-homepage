---
import 'zenn-content-css';
import lib from 'zenn-markdown-html';
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { formatToCurrency } from '../../util/formatToCurrency';

// TODO: as any を処する
let markdownHtml = lib;
if (typeof lib !== 'function') {
  markdownHtml = (markdownHtml as any).default;
}

export async function getStaticPaths() {
  const productEntries = await getCollection('products');
  return productEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const html = markdownHtml(entry.body);
---

<Layout title={entry.data.name}>
  <main>
    <section class="product">
      <div class="product-description">
        <h1>{entry.data.name}</h1>
        <p>{entry.data.description}</p>
        <div class="price">
          <span class="kakaku">価格:</span>
          <span class="price-yen">{formatToCurrency(entry.data.price)}</span>
          <span class="kakaku">(税込)</span>
        </div>
      </div>
      <div class="product-image">
        <img src={entry.data.image} alt={entry.data.name} />
      </div>
    </section>
    <section class="znc">
      <!-- Markdown に zenn のスタイルを適用するために znc クラスを付与する必要がある -->
      <Fragment set:html={html} />
    </section>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: var(--space-xl);
    font-size: var(--font-base);
    line-height: var(--line-h-base);
  }
  h1 {
    font-size: var(--font-2xl);
    margin-bottom: var(--space-xs);
  }
  img {
    display: block;
    width: 100%;
    aspect-ratio: 4/3;
    object-fit: cover;
    margin-top: var(--space-m);
  }
  .product {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    margin-bottom: var(--space-l);
    gap: var(--space-xs);
  }
  .product-description {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: start;
  }
  .product-image {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .price {
    display: flex;
    align-items: flex-end;
    color: var(--font-color-price);
    gap: var(--space-s);
    margin-top: var(--space-xs);
  }
  .kakaku {
    ront-size: var(--font-l);
    line-height: var(--line-h-l);
  }
  .price-yen {
    font-size: var(--font-2xl);
    line-height: var(--line-h-2xl);
  }
  @media screen and (min-width: 636px) {
    img {
      height: 400px;
      margin: 0;
    }
    .product {
      flex-direction: row;
    }
  }
</style>
